global:
  scrape_interval: 30s
  evaluation_interval: 30s
  external_labels:
    cluster: "loka-stratum"
    environment: "production"

rule_files:
  - "rules/*.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - alertmanager:9093

scrape_configs:
  # Prometheus itself
  - job_name: "prometheus"
    static_configs:
      - targets: ["localhost:9090"]
    scrape_interval: 30s
    metrics_path: /metrics

  # Loka Stratum mining proxy
  - job_name: "loka-stratum"
    static_configs:
      - targets: ["host.docker.internal:9091"]
    scrape_interval: 30s
    metrics_path: /metrics/prometheus
    scrape_timeout: 15s
    honor_labels: true
    params:
      format: ["prometheus"]

  # Loka Stratum health check (disabled - endpoint returns JSON, not Prometheus format)
  # - job_name: 'loka-stratum-health'
  #   static_configs:
  #     - targets: ['loka-stratum:9090']
  #   scrape_interval: 30s
  #   metrics_path: /health
  #   scrape_timeout: 5s

  # Node Exporter (system metrics)
  - job_name: "node-exporter"
    static_configs:
      - targets: ["node-exporter:9100"]
    scrape_interval: 30s
    scrape_timeout: 15s
    metrics_path: /metrics

  # cAdvisor (container metrics)
  - job_name: "cadvisor"
    static_configs:
      - targets: ["cadvisor:8080"]
    scrape_interval: 30s
    scrape_timeout: 15s
    metrics_path: /metrics

  # AlertManager
  - job_name: "alertmanager"
    static_configs:
      - targets: ["alertmanager:9093"]
    scrape_interval: 30s
    metrics_path: /metrics

  # Grafana
  - job_name: "grafana"
    static_configs:
      - targets: ["grafana:3000"]
    scrape_interval: 30s
    metrics_path: /metrics

  # Docker auto-discovery disabled due to permission issues on macOS
  # All services are configured with static configs above
  # - job_name: 'docker-containers'
  #   docker_sd_configs:
  #     - host: unix:///var/run/docker.sock
  #       refresh_interval: 30s
# Storage is configured via command line arguments

# Remote write configuration (optional - for long-term storage)
# remote_write:
#   - url: "https://your-remote-storage/api/v1/write"
#     headers:
#       Authorization: "Bearer YOUR_TOKEN"
#     queue_config:
#       max_samples_per_send: 1000
#       max_shards: 200
#       capacity: 2500
